---
import Button from '../Button.astro';
import { items } from './data';
import Logo from './Logo.astro';
---

<header class="header">
  <div class="nav-wrapper">
    <a class="logo" aria-label="JSConf Chile 2024" href="/">
      <Logo />
    </a>

    <nav class="navbar">
      <ul class="menu" aria-hidden="true">
        {
          items.map(({ label, title, url }) => (
            <li class="menu-item">
              <a
                href={url}
                aria-label={label}
                class:list={['menu-link', { 'is-active': Astro.url.pathname.endsWith(url) }]}
              >
                {title}
              </a>
            </li>
          ))
        }
      </ul>

      <Button variant="stroke" size="fit" color="yellow" link="/tickets" icon="log-out">
        Ingresar
      </Button>

      <label class="burger" role="button">
        <span class="bar"></span>
        <input id="burger-input" type="checkbox" hidden />
      </label>
    </nav>
  </div>
</header>

<style>
  .header {
    --nav-height: 4.5rem;

    z-index: 1100;
    height: var(--nav-height);
    position: sticky;
    inset-inline: 0;
    inset-block-start: 0;
    backdrop-filter: blur(1.5rem);
    background-color: rgb(from var(--bg-color) r g b / 0.6);

    & .nav-wrapper {
      margin: auto;
      height: 100%;
      width: min(80rem, 100vw);

      display: flex;
      justify-content: space-between;
      align-items: center;

      & .logo {
        color: var(--yellow);
      }

      & .navbar {
        gap: 1.5rem;
        display: flex;
        align-items: center;
        padding-inline: 1rem;
        justify-content: flex-end;

        & .menu {
          gap: 1.5rem;
          display: flex;
          align-items: center;
          justify-content: center;

          & .menu-item {
            & .menu-link {
              color: var(--white);
              text-decoration: none;

              transition:
                color 0.3s ease-in-out,
                text-decoration 0.3s ease-in-out;

              &:hover,
              &.is-active {
                color: var(--yellow);
                text-decoration: underline;
              }
            }
          }
        }

        & .burger {
          display: none;
          cursor: pointer;
          position: relative;
          width: 2rem;
          height: 1.5rem;

          &::before,
          &::after,
          & .bar::before,
          & .bar::after {
            content: '';
            width: 100%;
            height: 0.27rem;
            display: block;
            border-radius: 0.5625rem;
            background-color: var(--yellow);
            opacity: 1;
            position: absolute;
            inset-inline: 0;

            transition-property: opacity, transform, inset-block;
            transition-duration: 0.3s;
            transition-timing-function: ease-in-out;
          }

          &:before {
            inset-block-start: 0;
          }

          &:after {
            inset-block-end: 0;
          }

          .bar:before,
          .bar:after {
            inset-block-start: 50%;
            transform: translateY(-50%);
          }

          & input[type='checkbox'] {
            display: none;
          }

          &:has(input[type='checkbox']:checked) {
            &:before,
            &:after {
              opacity: 0;
            }

            &:before {
              inset-block-start: -0.25rem;
            }

            &:after {
              inset-block-end: -0.25rem;
            }

            & .bar:before {
              transform: rotate(45deg);
            }

            & .bar:after {
              transform: rotate(-45deg);
            }
          }
        }
      }
    }

    @media (width < 80rem) {
      & .nav-wrapper {
        padding-inline: 1rem;
      }
    }

    @media (width < 75rem) {
      & .nav-wrapper {
        & .navbar {
          & .menu {
            display: none;
          }

          &:has(.burger input[type='checkbox']:checked) {
            & .menu {
              display: flex;
              font-size: 1.2rem;
              flex-direction: column;
              padding-block-start: 3rem;
              justify-content: flex-start;

              position: fixed;
              inset-inline: 0;
              inset-block-start: calc(var(--nav-height) - 1.2rem);
              inset-block-end: 0;

              width: 100%;
              height: calc(100vh - var(--nav-height));
              background: rgb(from var(--bg-color) r g b / 0.99);
            }
          }

          & .burger {
            display: inline-block;
          }
        }
      }
    }
  }

  .nav-cont {
    display: flex;

    & .navbar {
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
      overflow: hidden;

      & .list {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding-left: 0;
        gap: 1.5rem;
        position: absolute;
        list-style: none;
        transform: translateY(-300%);
        opacity: 1;
        transition:
          transform 300ms ease-in-out,
          opacity 300ms ease-in-out;
        z-index: 1;

        @media (width >= 768px) {
          position: sticky;
          transform: translateY();
        }

        &[data-status='open'] {
          background-color: var(--black-opacity);
          transform: translateY(290px);
          backdrop-filter: blur(1rem);
          inline-size: 90%;
        }

        @media (width >= 768px) {
          flex-direction: row;
          inline-size: auto;
          transform: translateY(0);

          & li:nth-child(11) {
            padding-block-end: 0;
          }
        }
        & li:last-child {
          order: -1;
          padding-block-start: 0.5rem;

          @media (width >= 768px) {
            order: initial;
          }
        }

        & li:nth-child(11) {
          padding-block-end: 0.5rem;

          @media (width >= 768px) {
            padding-block-end: 0;
          }
        }

        & .list-item {
          color: var(--white);
          text-decoration: none;

          &:active,
          &.isActive {
            color: var(--yellow);
            text-decoration: underline;
          }

          @media (any-hover: hover) {
            &:hover {
              color: var(--yellow);
              text-decoration: underline;
            }
          }
        }
      }
      &[data-status='open'] {
        background-color: var(--color-menu-open);
        transform: translateX(0);
        opacity: 100;
        backdrop-filter: blur(0.1rem);
      }
    }
  }
</style>
