---
import { Icon } from 'astro-icon/components';

type ButtonVariant = 'solid' | 'stroke' | 'ghost';

type ButtonColor = 'white' | 'yellow';

type ButtonSize = 'fit' | 'large' | 'full';

interface Props {
  variant?: ButtonVariant;
  color?: ButtonColor;
  link: string;
  icon?: string;
  size?: ButtonSize;
}

const { variant = 'solid', color = 'yellow', link, icon = 'none', size = 'fit' } = Astro.props;
---

<a href={link} class:list={['button', variant, color, size]}>
  {
    icon === 'none' ? (
      <slot />
    ) : (
      <>
        <slot />
        <Icon name={icon} size="16" />
      </>
    )
  }
</a>

<style>
  .button {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    border-radius: 6px;
    font-weight: 600;
    padding: 0.5rem 1rem;
    cursor: pointer;
    transition: ease-in-out 0.2s;
    text-decoration: none;

    /* SIZE */

    &.fit {
      max-width: fit-content;
    }

    &.large {
      width: 13rem;
    }

    /* Usar esta clase solo en dispositivos m√≥viles */

    &.full {
      width: 100%;
    }

    /* COLOR */

    &.white {
      --button-color: var(--white);
      --button-color-hover: var(--gray-50);
      --button-color-hover-2: var(--white-disable);
    }

    &.yellow {
      --button-color: var(--yellow);
      --button-color-hover: var(--yellow-100);
      --button-color-hover-2: var(--yellow-400);
    }

    /* VARIANT */

    &.solid {
      background: var(--button-color);
      color: var(--black);

      &:hover {
        background: var(--button-color-hover);
      }
    }
    &.stroke {
      background: none;
      border: 1px solid var(--button-color);
      color: var(--white);

      &:hover {
        color: var(--black);
        background: var(--button-color-hover-2);
      }
    }
    &.ghost {
      background: none;
      border: 0;
      color: var(--button-color);

      &:hover {
        background: var(--button-color-hover-2);
      }
    }
  }
</style>
