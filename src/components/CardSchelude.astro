---
const { startTime, endTime, speakerName, description } = Astro.props;

const now = new Date();
const start = new Date(startTime);
const end = new Date(endTime);

const formattedStartTime = start.toLocaleTimeString([], {
  hour: '2-digit',
  minute: '2-digit',
  hour12: false
});
const formattedEndTime = end.toLocaleTimeString([], {
  hour: '2-digit',
  minute: '2-digit',
  hour12: false
});

let eventStatus = 'upcoming';

if (now > end) {
  eventStatus = 'past';
} else if (now >= start && now <= end) {
  eventStatus = 'live';
}
---

<div class={`event-card ${eventStatus}`}>
  <div class="event-status">
    <p class="event-time">{formattedStartTime} - {formattedEndTime}</p>
    <p class="event-tag">
      {eventStatus === 'past' ? null : eventStatus === 'live' ? 'En vivo' : null}
    </p>
  </div>
  <div>
    <p class="speaker-title">Speaker</p>
    <p class="speaker-name">{speakerName}</p>
  </div>
  <p class="event-summary">{description}</p>
</div>

<style>
  .event-card {
    max-width: 461px;
    width: fit-content;
    padding: 16px 24px;
    border-radius: 16px;
    display: flex;
    flex-direction: column;
    gap: 16px;
    background-image: var(--gradient-card-agenda);
    position: relative;

    &::after {
      content: '';
      position: absolute;
      height: 100%;
      width: 100%;
      border-radius: 16px;
      z-index: -1;
      top: 50%;
      left: 50%;
      translate: -50% -50%;
      scale: 1.015;
      background-image: var(--gradient-1);
    }

    .event-status {
      display: flex;
      justify-content: space-between;

      .event-time {
        font-size: 14px;
        font-weight: 600;
      }

      .event-tag {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: var(--yellow);
        width: 62px;
        height: 21px;
        border-radius: 17px;
        padding: 2px 6px;
        text-align: center;

        font-size: 14px;
        font-weight: 600;
        color: var(--black);
        text-transform: uppercase;
      }
    }

    .speaker-title {
      font-size: 24px;
      font-weight: 600;
      color: var(--yellow);
    }

    .speaker-name {
      font-size: 16px;
      font-weight: 700;
    }

    .event-summary {
      font-size: 18px;
      font-weight: 400;
    }
  }

  .event-card.past {
    background: var(--bg-color);
    .speaker-title {
      color: var(--yellow-200);
    }

    p {
      color: var(--gray-2);
    }

    &::after {
      opacity: 0.15;
    }

    .event-status {
      display: none;
    }
  }

  .event-card.live {
    background-image: var(--gradient-card-agenda);
  }

  .event-card.upcoming {
    background: var(--bg-color);

    .event-status {
      display: none;
    }
  }
</style>
